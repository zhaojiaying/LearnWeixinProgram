一、页面使用自定义组件的方式：
    1. json文件配置：
      {
        "usingComponents": {
          "待会儿要用自定义组件时的标签名":"自定义组件的路径（相对路径和绝对路径都可以）"
        }
      }
      建议标签名使用-连接，和官方文档保持一致
    2. 例如：
      "usingComponents": {
        "my-cpt2":"/component/myCpt2/myCpt2"
      }
    之后页面可使用标签 <my-cpt2/>

二、组件使用自定义组件
    1.引用方法类似于页面引用自定义组件的方式，使用usingComponent字段
    2.自定义组件和页面所在项目根目录名 不能以 "wx-" 为前缀，否则会报错
    3.如果在app.json的usingComponents声明某个组件，那么所有页面和组件可以直接使用该组件  "component": true
    
三、避免多个页面使用组件，重复和冗余性，可以将组件标签定义在app.json文件中
    全局设置的，所有的自定义组件和页面都可以使用自定义标签

四、组件的样式细节
  1.组件内的样式 对 外部样式 的影响
    1.1 组件内的class样式，只对组件wxml内的节点生效，对于引用组件的Page页面不生效
    1.2 组件内不能使用id选择器、属性选择器、标签选择器
  2.外部样式 对 组件内样式 的影响
    2.1 外部使用class的样式，只对外部wxml的class生效，对组件内是不生效的
    2.2 外部使用了id选择器、属性选择器不会对组件内产生影响
    2.3 外部使用了标签选择器，会对组件内产生影响
  3. 让class可以相互影响
    3.1 在component对象中，js文件中可以传入一个options属性，其中options属性有一个styleIsolation(隔离)属性
      styleIsolation有三个取值：
        1. isolated 表示启用样式隔离，在自定义组件内外，使用class指定的样式将不会相互影响（默认取值）
        2. apply-shared 表示页面wxss样式将影响到自定义组件，但自定义组件wxss中指定的样式不会影响页面
        3. shared 表示页面wxss样式将影响到自定义组件，自定义组件wxss中指定的样式也会影响页面和其他设置了


五、
1.组件内的class样式和组件外的class样式，默认是有一个隔离效果的
2.为了防止样式的错乱，官方不推荐使用id、属性、标签选择器

六、组件与页面的通信
1.1 页面给组件传数据：properties
1.2 页面给组件传样式：externalClasses 
1.3 页面给组件传标签：slot
2 组件给页面传事件：自定义事件

七、页面直接调用组件修改数据/方法this.selectComponent("class/id名")
  可以实现，但是不推荐，不规范